% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_ntsa.R
\name{find_best_theta}
\alias{find_best_theta}
\title{R wrapper function of funcTPSA in ands_ntsa.cpp}
\usage{
find_best_theta(
  X,
  col = 1,
  lib = matrix(c(1, nrow(X)), nrow = 1),
  pred = NULL,
  Tp = 1,
  gSeed = NA,
  threadNo = detectCores(),
  iterLim = 100,
  tsLength = 100,
  criterion = "rmse",
  method = 1,
  diag = 0,
  sigmas = c(1, 0.01),
  temps = c(1e-10, 0.01)
)
}
\arguments{
\item{X}{An embedding matrix, which is constructed by the function \code{\link{gen_emat}}.}

\item{col}{Integer, which specifides the position of prediction target in ts.}

\item{lib}{Vector or 2-column matrix, which sets the knot positions in library data.}

\item{pred}{Vector or 2-column matrix, which sets the knot position in test data.}

\item{Tp}{Integer, which is the prediction-time horizon.}

\item{gSeed}{Integer, which sets the RNG sed used in 'funcTPSA'.}

\item{threadNo}{Integer, which sets the No. of threads in 'funcTPSA'.}

\item{iterLim}{Integer, the maximum iteration of TPSA.}

\item{tsLength}{Integer, the time length in single SA run.}

\item{criterion}{Strings, which switches the cost function (Rho, MAE or RMSE)
for the dimension search (default = "rmse").}

\item{method}{Integer, which switches the LMD-based mapping solver.
If col == 0, y = C X is solved with SVD, otherwise is solved with L2 norm penelization.}

\item{diag}{Integer, if 0, the algorithm seeks the optimal values for only diagonal elementse in Theta (default 0).}

\item{sigmas}{Numeric vector, which sets the SD of normal_distribution used in 'funcTPSA'.}

\item{temps}{Numeric vector, which sets the range of temperature used in 'funcTPSA'.}
}
\description{
\code{find_best_theta} returns LMDr results at the best locality parameter.
The best locality parameter is searched with TPSA (Temperature-Parallel Simulated Annealing),
which is implemented wich C++ file (ands_ntsa.cpp).
}
