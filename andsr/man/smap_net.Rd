% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/func_ntsa.R
\name{smap_net}
\alias{smap_net}
\title{S-map with elastic net (a.k.a. Regularized S-map)}
\usage{
smap_net(
  X,
  col = 1,
  lib = matrix(c(1, nrow(X)), nrow = 1),
  pred = NULL,
  Tp = 1,
  dmat = NULL,
  range = seq(0, 10, 1),
  seed = NULL,
  threadNo = detectCores(),
  criterion = "rmse",
  s = "lambda.min",
  lambda = NULL,
  alpha = 0
)
}
\arguments{
\item{X}{A matrix, which is constructed by the function \code{\link{gen_emat}}.}

\item{col}{Integer, which specifies the position of prediction target in X.}

\item{lib}{Vector or 2-column matrix, which sets the knot positions in library data.}

\item{pred}{Vector or 2-column matrix, which sets the knot position in test data.}

\item{Tp}{Integer, which is the prediction-time horizon.}

\item{dmat}{Distance matrix to calculate local weights.
If dmat is obtained by \code{\link{get_mvd}}, the procedure follows
the MDR (MultiView-Distance Regularized) S-map algorithm (see Chang et al. 2021, Ecol Lett.)
If NULL< then Normal-Eculidean Distance is instead used for the analysis.}

\item{range}{Numeric vector, which sets the range of theta (uniform localisation parameter) for S-map.}

\item{seed}{Integer, which sets the RNG seed.}

\item{threadNo}{Integer, which sets the thread number of parallel computing.}

\item{criterion}{Strings, which switches the cost function (Rho, MAE or RMSE)
for the dimension search (default = "rmse").}

\item{s}{Strings, which swithces the criterion of the best theta in elastic net.
(for more detail, see original function \code{\link[glmnet]{cv.glmnet}}).}

\item{lambda}{Numeric vector, which sets the sequence of penalty strength for glmnet.
If NULL (default), then the adaptive search with cv.glmnet is adopted.}

\item{alpha}{Numeric, which controls the Elastic net parameter.
\code{alpha = 0} corresponds to the ridge penalty and \code{alpha = 1} is the lasso one.
(for more detail, see original function \code{\link[glmnet]{cv.glmnet}}).}
}
\description{
\code{smap_net} returns the (tibble) result of Regularized S-map.
Algorithm is adopted from Cenci et al. (2019), MEE.
}
